name: Monitor NY Events

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Restaura o cache usando chave fixa
      - name: Restore last_updates.json cache
        id: cache-last-updates
        uses: actions/cache@v4
        with:
          path: last_updates.json
          key: last-updates-v1
          restore-keys: |
            last-updates-v1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install requests

      - name: Show last_updates.json before script
        run: |
          echo 'Conteúdo de last_updates.json antes do script:'
          cat last_updates.json || echo '{}'

      - name: Run notifier
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: python notifier.py

      - name: Show last_updates.json after script
        run: |
          echo 'Conteúdo de last_updates.json depois do script:'
          cat last_updates.json || echo '{}'

      # Salva cache com chave fixa (sobrescreve o anterior)
      - name: Save last_updates.json cache
        if: always()
        uses: actions/cache@v4
        with:
          path: last_updates.json
          key: last-updates-v1
